{"version":3,"sources":["../src/dep.js"],"names":[],"mappings":";;;;;kBAWwB,G;;AAXxB;;AAEA,IAAI,MAAM,CAAV;;;;;;;;;AASe,SAAS,GAAT,GAAgB;AAC7B,OAAK,EAAL,GAAU,KAAV;AACA,OAAK,IAAL,GAAY,EAAZ;AACD;;;;;AAKD,IAAI,MAAJ,GAAa,IAAb;;;;;;;;AAQA,IAAI,SAAJ,CAAc,MAAd,GAAuB,UAAU,GAAV,EAAe;AACpC,OAAK,IAAL,CAAU,IAAV,CAAe,GAAf;AACD,CAFD;;;;;;;;AAUA,IAAI,SAAJ,CAAc,SAAd,GAA0B,UAAU,GAAV,EAAe;AACvC,OAAK,IAAL,CAAU,OAAV,CAAkB,GAAlB;AACD,CAFD;;;;;;AAQA,IAAI,SAAJ,CAAc,MAAd,GAAuB,YAAY;AACjC,MAAI,MAAJ,CAAW,MAAX,CAAkB,IAAlB;AACD,CAFD;;;;;;AAQA,IAAI,SAAJ,CAAc,MAAd,GAAuB,YAAY;AACjC,MAAI,OAAO,KAAK,IAAhB;AACA,mBAAK,IAAL,EAAW,UAAU,GAAV,EAAe;AACxB,QAAI,MAAJ;AACD,GAFD;AAGD,CALD","file":"dep.js","sourcesContent":["import { each } from './utils'\n\nlet uid = 0\n\n/**\n * A dep is an observable that can have multiple\n * directives subscribing to it.\n *\n * @constructor\n */\n\nexport default function Dep () {\n  this.id = uid++\n  this.subs = []\n}\n\n// the current target watcher being evaluated.\n// this is globally unique because there could be only one\n// watcher being evaluated at any time.\nDep.target = null\n\n/**\n * Add a directive subscriber.\n *\n * @param {Directive} sub\n */\n\nDep.prototype.addSub = function (sub) {\n  this.subs.push(sub)\n}\n\n/**\n * Remove a directive subscriber.\n *\n * @param {Directive} sub\n */\n\nDep.prototype.removeSub = function (sub) {\n  this.subs.$remove(sub)\n}\n\n/**\n * Add self as a dependency to the target watcher.\n */\n\nDep.prototype.depend = function () {\n  Dep.target.addDep(this)\n}\n\n/**\n * Notify all subscribers of a new value.\n */\n\nDep.prototype.notify = function () {\n  var subs = this.subs\n  each(subs, function (sub) {\n    sub.update()\n  })\n}\n"]}