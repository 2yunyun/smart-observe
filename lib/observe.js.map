{"version":3,"sources":["../src/observe.js"],"names":[],"mappings":"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","file":"observe.js","sourcesContent":["import Dep from './dep'\nimport { arrayMethods } from './array'\nimport {\n  def,\n  isArray,\n  isPlainObject,\n} from './util'\n\nconst arrayKeys = Object.getOwnPropertyNames(arrayMethods)\n\n/**\n * Observer class that are attached to each observed\n * object. Once attached, the observer converts target\n * object's property keys into getter/setters that\n * collect dependencies and dispatches updates.\n *\n * @param {Array|Object} value\n * @constructor\n */\n\nconst augment = '__proto__' in {}\n      ? Object.setPrototypeOf\n      : copyAugment\nexport function Observer (value) {\n  this.value = value\n  this.dep = new Dep()\n  def(value, '__ob__', this)\n  if (isArray(value)) {\n    augment(value, arrayMethods, arrayKeys)\n    this.observeArray(value)\n  } else {\n    this.walk(value)\n  }\n}\n\n// Instance methods\n\n/**\n * Walk through each property and convert them into\n * getter/setters. This method should only be called when\n * value type is Object.\n *\n * @param {Object} obj\n */\n\nObserver.prototype.walk = function (obj) {\n  var keys = Object.keys(obj)\n  for (var i = 0, l = keys.length; i < l; i++) {\n    this.convert(keys[i], obj[keys[i]])\n  }\n}\n\n/**\n * Observe a list of Array items.\n *\n * @param {Array} items\n */\n\nObserver.prototype.observeArray = function (items) {\n  for (var i = 0, l = items.length; i < l; i++) {\n    observe(items[i])\n  }\n}\n\n/**\n * Convert a property into getter/setter so we can emit\n * the events when the property is accessed/changed.\n *\n * @param {String} key\n * @param {*} val\n */\n\nObserver.prototype.convert = function (key, val) {\n  defineReactive(this.value, key, val)\n}\n\n/**\n * Augment an target Object or Array by defining\n * hidden properties.\n *\n * @param {Object|Array} target\n * @param {Object} proto\n */\n\nfunction copyAugment (target, src, keys) {\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i]\n    def(target, key, src[key])\n  }\n}\n\n/**\n * Attempt to create an observer instance for a value,\n * returns the new observer if successfully observed,\n * or the existing observer if the value already has one.\n *\n * @param {*} value\n * @param {Vue} [vm]\n * @return {Observer|undefined}\n * @static\n */\n\nexport function observe (value) {\n  if (!value || typeof value !== 'object') {\n    return\n  }\n  var ob\n  if (\n    Object.prototype.hasOwnProperty.call(value, '__ob__') &&\n    value.__ob__ instanceof Observer\n  ) {\n    ob = value.__ob__\n  } else if (\n    (isArray(value) || isPlainObject(value)) &&\n    Object.isExtensible(value)\n  ) {\n    ob = new Observer(value)\n  }\n  return ob\n}\n\n/**\n * Define a reactive property on an Object.\n *\n * @param {Object} obj\n * @param {String} key\n * @param {*} val\n */\n\nexport function defineReactive (obj, key, val) {\n  var dep = new Dep()\n\n  var property = Object.getOwnPropertyDescriptor(obj, key)\n  if (property && property.configurable === false) {\n    return\n  }\n\n  // cater for pre-defined getter/setters\n  var getter = property && property.get\n  var setter = property && property.set\n\n  var childOb = observe(val)\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter () {\n      var value = getter ? getter.call(obj) : val\n      if (Dep.target) {\n        dep.depend()\n        if (childOb) {\n          childOb.dep.depend()\n        }\n        if (isArray(value)) {\n          for (var e, i = 0, l = value.length; i < l; i++) {\n            e = value[i]\n            e && e.__ob__ && e.__ob__.dep.depend()\n          }\n        }\n      }\n      return value\n    },\n    set: function reactiveSetter (newVal) {\n      var value = getter ? getter.call(obj) : val\n      if (newVal === value) {\n        return\n      }\n      if (setter) {\n        setter.call(obj, newVal)\n      } else {\n        val = newVal\n      }\n      childOb = observe(newVal)\n      dep.notify()\n    },\n  })\n}\n"]}