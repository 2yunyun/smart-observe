{"version":3,"sources":["../src/observe.js"],"names":[],"mappings":"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","file":"observe.js","sourcesContent":["import Dep from './dep'\nimport amendArray from './array'\nimport {\n  def,\n  defi,\n  every,\n  each,\n  isArray,\n  isPlainObject,\n} from './utils'\n\n/**\n * Observer class that are attached to each observed\n * object. Once attached, the observer converts target\n * object's property keys into getter/setters that\n * collect dependencies and dispatches updates.\n *\n * @param {Array|Object} value\n * @constructor\n */\n\nfunction Observer (value) {\n  this.value = value\n  this.dep = new Dep()\n  def(value, '__ob__', this)\n  if (isArray(value)) {\n    amendArray(value)\n    this.observeArray(value)\n  } else {\n    this.walk(value)\n  }\n}\n\n/**\n * Walk through each property and convert them into\n * getter/setters. This method should only be called when\n * value type is Object.\n *\n * @param {Object} obj\n */\n\nObserver.prototype.walk = function (obj) {\n  every(obj, (key, val) => {\n    this.convert(key, val)\n  })\n}\n\n/**\n * Observe a list of Array items.\n *\n * @param {Array} items\n */\n\nObserver.prototype.observeArray = function (items) {\n  each(items, function (val) {\n    observe(val)\n  })\n}\n\n/**\n * Convert a property into getter/setter so we can emit\n * the events when the property is accessed/changed.\n *\n * @param {String} key\n * @param {*} val\n */\n\nObserver.prototype.convert = function (key, val) {\n  defineReactive(this.value, key, val)\n}\n\n/**\n * Attempt to create an observer instance for a value,\n * returns the new observer if successfully observed,\n * or the existing observer if the value already has one.\n *\n * @param {*} value\n * @return {Observer|undefined}\n */\n\nexport function observe (value) {\n  if (!value || typeof value !== 'object') {\n    return\n  }\n  var ob\n  if (\n    Object.prototype.hasOwnProperty.call(value, '__ob__') &&\n    value.__ob__ instanceof Observer\n  ) {\n    ob = value.__ob__\n  } else if (\n    (isArray(value) || isPlainObject(value)) &&\n    Object.isExtensible(value)\n  ) {\n    ob = new Observer(value)\n  }\n  return ob\n}\n\n/**\n * Define a reactive property on an Object.\n *\n * @param {Object} obj\n * @param {String} key\n * @param {*} val\n */\n\nexport function defineReactive (obj, key, val) {\n  var dep = new Dep()\n\n  var desc = Object.getOwnPropertyDescriptor(obj, key)\n  if (desc && desc.configurable === false) {\n    return\n  }\n\n  // cater for pre-defined getter/setters\n  var getter = desc && desc.get\n  var setter = desc && desc.set\n\n  var childOb = observe(val)\n\n  function reactiveGetter () {\n    var value = getter ? getter.call(obj) : val\n    if (Dep.target) {\n      dep.depend()\n      if (childOb) {\n        childOb.dep.depend()\n      }\n      if (isArray(value)) {\n        each(value, function (e) {\n          e && e.__ob__ && e.__ob__.dep.depend()\n        })\n      }\n    }\n    return value\n  }\n  function reactiveSetter (newVal) {\n    var value = getter ? getter.call(obj) : val\n    if (newVal === value) {\n      return\n    }\n    if (setter) {\n      setter.call(obj, newVal)\n    } else {\n      val = newVal\n    }\n    childOb = observe(newVal)\n    dep.notify()\n  }\n  defi(obj, key, reactiveGetter, reactiveSetter)\n}\n"]}