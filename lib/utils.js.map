{"version":3,"sources":["../src/utils.js"],"names":[],"mappings":";;;;;;;;QASgB,G,GAAA,G;QAkBA,I,GAAA,I;QA4BA,a,GAAA,a;QAYA,O,GAAA,O;QAiBA,Q,GAAA,Q;QAWA,K,GAAA,K;QAcA,I,GAAA,I;QAaA,M,GAAA,M;QAQA,I,GAAA,I;;;;;;;;;;AAzHT,SAAS,GAAT,CAAc,GAAd,EAAmB,GAAnB,EAAwB,GAAxB,EAA6B,UAA7B,EAAyC;AAC9C,SAAO,cAAP,CAAsB,GAAtB,EAA2B,GAA3B,EAAgC;AAC9B,WAAO,GADuB;AAE9B,gBAAY,CAAC,CAAC,UAFgB;AAG9B,cAAU,IAHoB;AAI9B,kBAAc;AAJgB,GAAhC;AAMD;;;;;;;;;;;AAWM,SAAS,IAAT,CAAe,GAAf,EAAoB,GAApB,EAAyB,MAAzB,EAAiC,MAAjC,EAAyC;AAC9C,SAAO,cAAP,CAAsB,GAAtB,EAA2B,GAA3B,EAAgC;AAC9B,SAAK,MADyB;AAE9B,SAAK,MAFyB;AAG9B,kBAAc,IAHgB;AAI9B,gBAAY;AAJkB,GAAhC;AAMD;;;;;;;;;AASM,IAAM,4BAAU,MAAM,OAAtB;;;;;;;;;;AAUP,IAAI,WAAW,OAAO,SAAP,CAAiB,QAAhC;AACA,IAAI,gBAAgB,iBAApB;AACO,SAAS,aAAT,CAAwB,GAAxB,EAA6B;AAClC,SAAO,SAAS,IAAT,CAAc,GAAd,MAAuB,aAA9B;AACD;;;;;;;;;;AAUM,SAAS,OAAT,CAAkB,GAAlB,EAAuB,GAAvB,EAA4B;AACjC,MAAI,IAAI,IAAI,MAAZ;AACA,SAAO,GAAP,EAAY;AACV,QAAI,IAAI,CAAJ,MAAW,GAAf,EAAoB,OAAO,CAAP;AACrB;AACD,SAAO,CAAC,CAAR;AACD;;;;;;;;;;;AAWM,SAAS,QAAT,CAAmB,GAAnB,EAAwB;AAC7B,SAAO,QAAQ,IAAR,IAAgB,QAAO,GAAP,yCAAO,GAAP,OAAe,QAAtC;AACD;;;;;;;;;AASM,SAAS,KAAT,CAAgB,GAAhB,EAAqB,EAArB,EAAyB;AAC9B,MAAI,OAAO,OAAO,IAAP,CAAY,GAAZ,CAAX;AACA,OAAK,IAAI,IAAI,CAAR,EAAW,IAAI,KAAK,MAAzB,EAAiC,IAAI,CAArC,EAAwC,GAAxC,EAA6C;AAC3C,OAAG,KAAK,CAAL,CAAH,EAAY,IAAI,KAAK,CAAL,CAAJ,CAAZ;AACD;AACF;;;;;;;;;AASM,SAAS,IAAT,CAAe,GAAf,EAAoB,EAApB,EAAwB;AAC7B,OAAK,IAAI,IAAI,CAAR,EAAW,IAAI,IAAI,MAAxB,EAAgC,IAAI,CAApC,EAAuC,GAAvC,EAA4C;AAC1C,OAAG,IAAI,CAAJ,CAAH,EAAW,CAAX;AACD;AACF;;;;;;;;;AASM,SAAS,MAAT,CAAiB,IAAjB,EAAuB;AAC5B,SAAO,OAAO,IAAP,KAAgB,UAAvB;AACD;;;;;;AAMM,SAAS,IAAT,GAAiB,CAAE;;;;;;AAMnB,IAAM,4BACX,OAAO,OAAP,KAAmB,WAAnB,IACA,QAAQ,GAAR,CAAY,QAAZ,KAAyB,YAFpB;;;;;;AAQA,IAAM,sBACX,WACA,OADA,IACW,OAAO,QAAQ,IAAf,CADX,GAEE,QAAQ,IAFV,GAGE,IAJG","file":"utils.js","sourcesContent":["/**\n * Define a property.\n *\n * @param {Object} obj\n * @param {String} key\n * @param {*} val\n * @param {Boolean} [enumerable]\n */\n\nexport function def (obj, key, val, enumerable) {\n  Object.defineProperty(obj, key, {\n    value: val,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true,\n  })\n}\n\n/**\n * Define a property.\n *\n * @param {Object} obj\n * @param {String} key\n * @param {Function} getter\n * @param {Function} setter\n */\n\nexport function defi (obj, key, getter, setter) {\n  Object.defineProperty(obj, key, {\n    get: getter,\n    set: setter,\n    configurable: true,\n    enumerable: true,\n  })\n}\n\n/**\n * Array type check.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nexport const isArray = Array.isArray\n\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nvar toString = Object.prototype.toString\nvar OBJECT_STRING = '[object Object]'\nexport function isPlainObject (obj) {\n  return toString.call(obj) === OBJECT_STRING\n}\n\n/**\n * Manual indexOf because it's slightly faster than\n * native.\n *\n * @param {Array} arr\n * @param {*} obj\n */\n\nexport function indexOf (arr, obj) {\n  var i = arr.length\n  while (i--) {\n    if (arr[i] === obj) return i\n  }\n  return -1\n}\n\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nexport function isObject (obj) {\n  return obj !== null && typeof obj === 'object'\n}\n\n/**\n * every\n *\n * @param {Object} obj\n * @param {Function} cb\n */\n\nexport function every (obj, cb) {\n  var keys = Object.keys(obj)\n  for (var i = 0, l = keys.length; i < l; i++) {\n    cb(keys[i], obj[keys[i]])\n  }\n}\n\n/**\n * each\n *\n * @param {Array} arr\n * @param {Function} cb\n */\n\nexport function each (arr, cb) {\n  for (var i = 0, l = arr.length; i < l; i++) {\n    cb(arr[i], i)\n  }\n}\n\n/**\n * isFunc\n *\n * @param {*} func\n * @param {Boolean}\n */\n\nexport function isFunc (func) {\n  return typeof func === 'function'\n}\n\n/**\n * noop is function which is nothing to do.\n */\n\nexport function noop () {}\n\n/**\n * isDebug\n */\n\nexport const isDebug =\n  typeof process !== 'undefined' &&\n  process.env.NODE_ENV !== 'production'\n\n/**\n * warn\n */\n\nexport const warn =\n  isDebug &&\n  console && isFunc(console.warn)\n  ? console.warn\n  : noop\n"]}