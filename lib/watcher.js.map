{"version":3,"sources":["../src/watcher.js"],"names":[],"mappings":"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","file":"watcher.js","sourcesContent":["import Dep from './dep'\nimport parseExpression from './expression'\nimport batch from './batcher'\nimport {\n  isArray,\n  isObject,\n  isFunc,\n} from './utils'\n\nlet uid = 0\n\n/**\n * A watcher parses an expression, collects dependencies,\n * and fires callback when the expression value changes.\n *\n * @param {Object} owner\n * @param {String|Function} expOrFn\n * @param {Function} callback\n * @param {Object} options\n *                 - {Boolean} deep\n *                 - {Boolean} sync\n *                 - {Boolean} lazy\n * @constructor\n */\n\nfunction Watcher (owner, getter, callback, options) {\n  owner._watchers.push(this)\n  this.owner = owner\n  this.getter = getter\n  this.callback = callback\n  this.options = options\n  // uid for batching\n  this.id = ++uid\n  this.active = true\n  // for lazy watchers\n  this.dirty = options.lazy\n  this.deps = []\n  this.newDeps = []\n  this.depIds = Object.create(null)\n  this.newDepIds = null\n  this.value = options.lazy\n    ? undefined\n    : this.get()\n}\n\n/**\n * Evaluate the getter, and re-collect dependencies.\n */\n\nWatcher.prototype.get = function () {\n  this.beforeGet()\n  var scope = this.owner\n  var value = this.getter.call(scope, scope)\n  if (this.options.deep) {\n    traverse(value)\n  }\n  this.afterGet()\n  return value\n}\n\n/**\n * Prepare for dependency collection.\n */\n\nWatcher.prototype.beforeGet = function () {\n  Dep.target = this\n  this.newDepIds = Object.create(null)\n  this.newDeps.length = 0\n}\n\n/**\n * Add a dependency to this directive.\n *\n * @param {Dep} dep\n */\n\nWatcher.prototype.addDep = function (dep) {\n  var id = dep.id\n  if (!this.newDepIds[id]) {\n    this.newDepIds[id] = true\n    this.newDeps.push(dep)\n    if (!this.depIds[id]) {\n      dep.addSub(this)\n    }\n  }\n}\n\n/**\n * Clean up for dependency collection.\n */\n\nWatcher.prototype.afterGet = function () {\n  Dep.target = null\n  var i = this.deps.length\n  while (i--) {\n    var dep = this.deps[i]\n    if (!this.newDepIds[dep.id]) {\n      dep.removeSub(this)\n    }\n  }\n  this.depIds = this.newDepIds\n  var tmp = this.deps\n  this.deps = this.newDeps\n  this.newDeps = tmp\n}\n\n/**\n * Subscriber interface.\n * Will be called when a dependency changes.\n */\n\nWatcher.prototype.update = function () {\n  if (this.options.lazy) {\n    this.dirty = true\n  } else if (this.options.sync) {\n    this.run()\n  } else {\n    batch(this)\n  }\n}\n\n/**\n * Batcher job interface.\n * Will be called by the batcher.\n */\n\nWatcher.prototype.run = function () {\n  if (this.active) {\n    var value = this.get()\n    if (\n      value !== this.value ||\n      // Deep watchers and watchers on Object/Arrays should fire even when\n      // the value is the same, because the value may have mutated;\n      ((isObject(value) || this.options.deep))\n    ) {\n      // set new value\n      var oldValue = this.value\n      this.value = value\n      // in debug + async mode, when a watcher callbacks\n      // throws, we also throw the saved before-push error\n      // so the full cross-tick stack trace is available.\n      this.callback.call(this.owner, value, oldValue)\n    }\n  }\n}\n\n/**\n * Evaluate the value of the watcher.\n * This only gets called for lazy watchers.\n */\n\nWatcher.prototype.evaluate = function () {\n  // avoid overwriting another watcher that is being\n  // collected.\n  var current = Dep.target\n  this.value = this.get()\n  this.dirty = false\n  Dep.target = current\n}\n\n/**\n * Depend on all deps collected by this watcher.\n */\n\nWatcher.prototype.depend = function () {\n  var i = this.deps.length\n  while (i--) {\n    this.deps[i].depend()\n  }\n}\n\n/**\n * Remove self from all dependencies' subcriber list.\n */\n\nWatcher.prototype.teardown = function () {\n  if (this.active) {\n    var i = this.deps.length\n    while (i--) {\n      this.deps[i].removeSub(this)\n    }\n    this.active = false\n    this.owner = this.callback = this.value = null\n  }\n}\n\n/**\n * Recrusively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n *\n * @param {*} val\n */\n\nfunction traverse (val) {\n  var i, keys\n  if (isArray(val)) {\n    i = val.length\n    while (i--) traverse(val[i])\n  } else if (isObject(val)) {\n    keys = Object.keys(val)\n    i = keys.length\n    while (i--) traverse(val[keys[i]])\n  }\n}\n\n/**\n * Create an watcher instance, returns the new watcher.\n *\n * @param {Object} owner\n * @param {String|Function} expOrFn\n * @param {Function} callback\n * @param {Object} options\n *                 - {Boolean} deep\n *                 - {Boolean} sync\n *                 - {Boolean} lazy\n * @constructor\n */\n\nexport function watch (owner, expOrFn, callback, options) {\n  // parse expression for getter\n  var getter = isFunc(expOrFn)\n               ? expOrFn\n               : parseExpression(expOrFn)\n  var instance = new Watcher(owner, getter, callback, options)\n  return instance\n}\n\n/**\n * Make a computed getter, which can collect dependencies.\n *\n * @param {Object} owner\n * @param {Function} getter\n */\n\nexport function makeComputed (owner, getter) {\n  var watcher = new Watcher(owner, getter, null, {\n    lazy: true,\n  })\n  return function computedGetter () {\n    if (watcher.dirty) {\n      watcher.evaluate()\n    }\n    if (Dep.target) {\n      watcher.depend()\n    }\n    return watcher.value\n  }\n}\n"]}