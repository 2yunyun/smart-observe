{"version":3,"file":null,"sources":["../src/utils.js","../src/array.js","../src/observe.js","../src/expression.js","../src/batcher.js","../src/watcher.js","../src/ob.js","../__babelHelpers__","../src/dep.js","../src/constants.js"],"sourcesContent":["import {IS_DEBUG} from './constants'\n\n/**\n * Define property with value.\n *\n * @param {Object} object\n * @param {String} property\n * @param {*} value\n * @param {Boolean} [enumerable]\n */\n\nexport function def (object, property, value, enumerable) {\n  Object.defineProperty(object, property, {\n    value,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true,\n  })\n}\n\n/**\n * Define property with getter and setter.\n *\n * @param {Object} object\n * @param {String} property\n * @param {Function} getter\n * @param {Function} setter\n */\n\nexport function defi (object, property, getter, setter) {\n  Object.defineProperty(object, property, {\n    get: getter,\n    set: setter,\n    configurable: true,\n    enumerable: true,\n  })\n}\n\n/**\n * Array type check.\n *\n * @return {Boolean}\n */\n\nexport const isArray = Array.isArray\n\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n *\n * @param {*} object\n * @return {Boolean}\n */\n\nconst toString = Object.prototype.toString\nconst OBJECT_STRING = '[object Object]'\nexport function isPlainObject (object) {\n  return toString.call(object) === OBJECT_STRING\n}\n\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n *\n * @param {*} object\n * @return {Boolean}\n */\n\nexport function isObject (object) {\n  return object !== null && typeof object === 'object'\n}\n\n/**\n * Function type check\n *\n * @param {*} fun\n * @param {Boolean}\n */\n\nexport function isFunction (fun) {\n  return typeof fun === 'function'\n}\n\n/**\n * Iterate object\n *\n * @param {Object} object\n * @param {Function} cb\n */\n\nexport function every (object, callback) {\n  const keys = Object.keys(object)\n  for (let i = 0, l = keys.length; i < l; i++) {\n    callback(keys[i], object[keys[i]])\n  }\n}\n\n/**\n * noop is function which is nothing to do.\n */\n\nexport function noop () {}\n\n/**\n * @param {String} string\n */\n\nexport const warn =\n  IS_DEBUG\n  && console\n  && isFunction(console.warn)\n    ? console.warn\n    : noop\n\nexport let _Set\n/* istanbul ignore if */\nif (typeof Set !== 'undefined' && Set.toString().match(/native code/)) {\n  // use native Set when available.\n  _Set = Set\n} else {\n  // a non-standard Set polyfill that only works with primitive keys.\n  _Set = function () {\n    this.set = Object.create(null)\n  }\n  _Set.prototype.has = function (key) {\n    return this.set[key] !== undefined\n  }\n  _Set.prototype.add = function (key) {\n    this.set[key] = 1\n  }\n  _Set.prototype.clear = function () {\n    this.set = Object.create(null)\n  }\n}\n","import {def} from './utils'\nimport {OB_NAME} from './constants'\n\nconst arrayPrototype = Array.prototype\nconst arrayMethods = Object.create(arrayPrototype)\nconst arrayMutativeMethods = [\n  'push',\n  'pop',\n  'shift',\n  'unshift',\n  'splice',\n  'sort',\n  'reverse',\n]\n\n/**\n * Augment an target Array with arrayMethods\n *\n * @param {Array} array\n */\n\nexport default function amend (array) {\n  Object.setPrototypeOf(array, arrayMethods)\n}\n\n/**\n * Intercept mutating methods and emit events\n */\n\nfor (\n  let i = 0, l = arrayMutativeMethods.length, method;\n  i < l;\n  method = arrayMutativeMethods[++i]\n) {\n  // cache original method\n  const original = arrayPrototype[method]\n  def(arrayMethods, method, function mutator (...args) {\n    const result = original.apply(this, args)\n    const ob = this[OB_NAME]\n    let inserted\n    switch (method) {\n      case 'push':\n        inserted = args\n        break\n      case 'unshift':\n        inserted = args\n        break\n      case 'splice':\n        inserted = args.slice(2)\n        break\n    }\n    if (inserted) ob.observeArray(inserted)\n    ob.dep.notify()  // notify change\n    return result\n  })\n}\n\n/**\n * Swap the element at the given index with a new value\n * and emits corresponding event.\n *\n * @param {Number} index\n * @param {*} value\n * @return {*} - replaced element\n */\n\nfunction $set (index, value) {\n  if (index >= this.length) {\n    this.length = Number(index) + 1\n  }\n  return this.splice(index, 1, value)[0]\n}\ndef(arrayPrototype, '$set', $set)\n\n/**\n * Convenience method to remove the element at given index\n * or target element reference.\n *\n * @param {*} item\n */\n\nfunction $remove (item) {\n  /* istanbul ignore if */\n  if (!this.length) return\n  const index = this.indexOf(item)\n  if (index > -1) {\n    return this.splice(index, 1)\n  }\n}\ndef(arrayPrototype, '$remove', $remove)\n","import Dep from './dep'\nimport amendArray from './array'\nimport {\n  def,\n  defi,\n  isArray,\n  isPlainObject,\n  every,\n} from './utils'\nimport {OB_NAME} from './constants'\n\n/**\n * Observer class that are attached to each observed\n * object. Once attached, the observer converts target\n * object's property keys into getter/setters that\n * collect dependencies and dispatches updates.\n *\n * @param {Array|Object} value\n * @constructor\n */\n\nfunction Observer (value) {\n  this.value = value\n  this.dep = new Dep()\n  def(value, OB_NAME, this)\n  if (isArray(value)) {\n    amendArray(value)\n    this.observeArray(value)\n  } else {\n    this.walk(value)\n  }\n}\n\n/**\n * Walk through each property and convert them into\n * getter/setters. This method should only be called when\n * value type is Object.\n *\n * @param {Object} object\n */\n\nObserver.prototype.walk = function (object) {\n  every(object, (key, value) => this.convert(key, value))\n}\n\n/**\n * Observe a list of Array items.\n *\n * @param {Array} items\n */\n\nObserver.prototype.observeArray = function (items) {\n  for (let i = 0, l = items.length; i < l; i++) {\n    observe(items[i])\n  }\n}\n\n/**\n * Convert a property into getter/setter so we can emit\n * the events when the property is accessed/changed.\n *\n * @param {String} key\n * @param {*} value\n */\n\nObserver.prototype.convert = function (key, value) {\n  defineReactive(this.value, key, value)\n}\n\n/**\n * Attempt to create an observer instance for a value,\n * returns the new observer if successfully observed,\n * or the existing observer if the value already has one.\n *\n * @param {*} value\n * @return {Observer|undefined}\n */\n\nexport function observe (value) {\n  if (!value || typeof value !== 'object') {\n    return\n  }\n  let observer\n  if (\n    Object.prototype.hasOwnProperty.call(value, OB_NAME)\n    && value[OB_NAME] instanceof Observer\n  ) {\n    observer = value[OB_NAME]\n  } else if (\n    (isArray(value) || isPlainObject(value))\n    && Object.isExtensible(value)\n  ) {\n    observer = new Observer(value)\n  }\n  return observer\n}\n\n/**\n * Define a reactive property on an Object.\n *\n * @param {Object} object\n * @param {String} key\n * @param {*} value\n */\n\nexport function defineReactive (object, key, value) {\n  const dep = new Dep()\n\n  const desc = Object.getOwnPropertyDescriptor(object, key)\n  if (desc && desc.configurable === false) {\n    return\n  }\n\n  // cater for pre-defined getter/setters\n  const getter = desc && desc.get\n  const setter = desc && desc.set\n\n  let childOb = observe(value)\n\n  function reactiveGetter () {\n    const currentValue = getter ? getter.call(object) : value\n    if (Dep.target) {\n      dep.depend()\n      if (childOb) {\n        childOb.dep.depend()\n      }\n      if (isArray(currentValue)) {\n        for (let i = 0, l = currentValue.length, e; i < l; i++) {\n          e = currentValue[i]\n          e && e[OB_NAME] && e[OB_NAME].dep.depend()\n        }\n      }\n    }\n    return currentValue\n  }\n  function reactiveSetter (newValue) {\n    const oldValue = getter ? getter.call(object) : value\n    if (newValue === oldValue) {\n      return\n    }\n    if (setter) {\n      setter.call(object, newValue)\n    } else {\n      value = newValue\n    }\n    childOb = observe(newValue)\n    dep.notify()\n  }\n  defi(object, key, reactiveGetter, reactiveSetter)\n}\n","import {warn} from './utils'\n\n/**\n * Build a getter function. Requires eval.\n *\n * We isolate the try/catch so it doesn't affect the\n * optimization of the parse function when it is not called.\n *\n * @param {String} body\n * @return {Function|undefined}\n */\n\nfunction makeGetterFunction (body) {\n  try {\n    /* eslint-disable no-new-func */\n    return new Function('scope', `return ${body};`)\n    /* eslint-enable no-new-func */\n  } catch (e) {\n    warn('Invalid expression. Generated function body: ' + body)\n  }\n}\n\n/**\n * Parse an expression to getter.\n *\n * @param {String} expression\n * @return {Function|undefined}\n */\n\nexport default function parse (expression) {\n  expression = String.prototype.trim.call(expression)\n  return makeGetterFunction('scope.' + expression)\n}\n","let queue = []\nlet has = {}\nlet waiting = false\nlet queueIndex\n\n/**\n * Reset the batcher's state.\n */\n\nfunction resetBatcherState () {\n  queue = []\n  has = {}\n  waiting = false\n}\n\n/**\n * Flush queue and run the watchers.\n */\n\nfunction flushBatcherQueue () {\n  runBatcherQueue(queue)\n  resetBatcherState()\n}\n\n/**\n * Run the watchers in a single queue.\n *\n * @param {Array} queue\n */\n\nfunction runBatcherQueue (queue) {\n  // do not cache length because more watchers might be pushed\n  // as we run existing watchers\n  for (queueIndex = 0; queueIndex < queue.length; queueIndex++) {\n    const watcher = queue[queueIndex]\n    const id = watcher.id\n    has[id] = null\n    watcher.run()\n  }\n}\n\n/**\n * Defer a task to execute it asynchronously. Ideally this\n * should be executed as a microtask, so we leverage\n * MutationObserver if it's available, and fallback to\n * setTimeout(0).\n *\n * @param {Function} callback\n * @param {Object} context\n */\n\nconst nextTick = (function () {\n  let callbacks = []\n  let pending = false\n  let timerFunction\n  function nextTickHandler () {\n    pending = false\n    const callbackCopies = callbacks.slice(0)\n    callbacks = []\n    for (let i = 0; i < callbackCopies.length; i++) {\n      callbackCopies[i]()\n    }\n  }\n\n  /* istanbul ignore if */\n  if (typeof MutationObserver !== 'undefined') {\n    let counter = 1\n    /* global MutationObserver */\n    const observer = new MutationObserver(nextTickHandler)\n    /* global */\n    const textNode = document.createTextNode(counter)\n    observer.observe(textNode, {characterData: true})\n    timerFunction = function () {\n      counter = (counter + 1) % 2\n      textNode.data = counter\n    }\n  } else {\n    // webpack attempts to inject a shim for setImmediate\n    // if it is used as a global, so we have to work around that to\n    // avoid bundling unnecessary code.\n    const inBrowser = typeof window !== 'undefined'\n      && Object.prototype.toString.call(window) !== '[object Object]'\n    const context =\n      inBrowser ? window : typeof global !== 'undefined' ? global : {}\n    timerFunction = context.setImmediate || setTimeout\n  }\n  return function (callback, context) {\n    const fun = context ? function () { callback.call(context) } : callback\n    callbacks.push(fun)\n    if (pending) return\n    pending = true\n    timerFunction(nextTickHandler, 0)\n  }\n})()\n\n/**\n * Push a watcher into the watcher queue.\n * Jobs with duplicate IDs will be skipped unless it's\n * pushed when the queue is being flushed.\n *\n * @param {Watcher} watcher\n *   properties:\n *   - {Number} id\n *   - {Function} run\n */\n\nexport default function batch (watcher) {\n  const id = watcher.id\n  if (has[id] == null) {\n    has[id] = queue.length\n    queue.push(watcher)\n    // queue the flush\n    if (!waiting) {\n      waiting = true\n      nextTick(flushBatcherQueue)\n    }\n  }\n}\n","import ob from './ob.js'\nimport Dep from './dep'\nimport parseExpression from './expression'\nimport batch from './batcher'\nimport {\n  isArray,\n  isObject,\n  isFunction,\n  _Set as Set,\n} from './utils'\nimport {WATCHERS_PROPERTY_NAME} from './constants'\n\nlet uid = 0\n\nclass Watcher {\n\n  /**\n   * A watcher parses an expression, collects dependencies,\n   * and fires callback when the expression value changes.\n   *\n   * @param {Object} owner\n   * @param {String|Function} getter\n   * @param {Function} callback\n   * @param {Object} options\n   *                 - {Boolean} deep\n   *                 - {Boolean} sync\n   *                 - {Boolean} lazy\n   * @constructor\n   */\n\n  constructor (owner, getter, callback, options) {\n    owner[WATCHERS_PROPERTY_NAME].push(this)\n    this.owner = owner\n    this.getter = getter\n    this.callback = callback\n    this.options = options\n    // uid for batching\n    this.id = ++uid\n    this.active = true\n    // for lazy watchers\n    this.dirty = options.lazy\n    this.deps = []\n    this.newDeps = []\n    this.depIds = new Set()\n    this.newDepIds = new Set()\n    this.value = options.lazy\n      ? undefined\n      : this.get()\n  }\n\n  /**\n   * Evaluate the getter, and re-collect dependencies.\n   */\n\n  get () {\n    this.beforeGet()\n    const scope = this.owner\n    const value = this.getter.call(scope, scope)\n    if (this.options.deep) {\n      traverse(value)\n    }\n    this.afterGet()\n    return value\n  }\n\n  /**\n   * Prepare for dependency collection.\n   */\n\n  beforeGet () {\n    Dep.target = this\n  }\n\n  /**\n   * Add a dependency to this directive.\n   *\n   * @param {Dep} dep\n   */\n\n  addDep (dep) {\n    const id = dep.id\n    if (!this.newDepIds.has(id)) {\n      this.newDepIds.add(id)\n      this.newDeps.push(dep)\n      if (!this.depIds.has(id)) {\n        dep.addSub(this)\n      }\n    }\n  }\n\n  /**\n   * Clean up for dependency collection.\n   */\n\n  afterGet () {\n    Dep.target = null\n    let i = this.deps.length\n    while (i--) {\n      const dep = this.deps[i]\n      if (!this.newDepIds.has(dep.id)) {\n        dep.removeSub(this)\n      }\n    }\n    let tmp = this.depIds\n    this.depIds = this.newDepIds\n    this.newDepIds = tmp\n    this.newDepIds.clear()\n    tmp = this.deps\n    this.deps = this.newDeps\n    this.newDeps = tmp\n    this.newDeps.length = 0\n  }\n\n  /**\n   * Will be called when a dependency changes.\n   */\n\n  update () {\n    if (this.options.lazy) {\n      this.dirty = true\n    } else if (this.options.sync) {\n      this.run()\n    } else {\n      batch(this)\n    }\n  }\n\n  /**\n   * Will be called by the batcher.\n   */\n\n  run () {\n    if (this.active) {\n      const value = this.get()\n      if (\n        value !== this.value\n        // Deep watchers and watchers on Object/Arrays should fire even when\n        // the value is the same, because the value may have mutated;\n        || ((isObject(value) || this.options.deep))\n      ) {\n        const oldValue = this.value\n        this.value = value\n        this.callback.call(this.owner, value, oldValue)\n      }\n    }\n  }\n\n  /**\n   * Evaluate the value of the watcher.\n   * This only gets called for lazy watchers.\n   */\n\n  evaluate () {\n    // avoid overwriting another watcher that is being collected.\n    const current = Dep.target\n    this.value = this.get()\n    this.dirty = false\n    Dep.target = current\n  }\n\n  /**\n   * Depend on all deps collected by this watcher.\n   */\n\n  depend () {\n    let i = this.deps.length\n    while (i--) {\n      this.deps[i].depend()\n    }\n  }\n\n  /**\n   * Remove self from all dependencies' subcriber list.\n   */\n\n  teardown () {\n    if (this.active) {\n      let i = this.deps.length\n      while (i--) {\n        this.deps[i].removeSub(this)\n      }\n      this.active = false\n      this.owner = this.callback = this.value = null\n    }\n  }\n}\n\n/**\n * Recrusively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n *\n * @param {*} value\n */\n\nfunction traverse (value) {\n  let i, keys\n  if (isArray(value)) {\n    i = value.length\n    while (i--) traverse(value[i])\n  } else if (isObject(value)) {\n    keys = Object.keys(value)\n    i = keys.length\n    while (i--) traverse(value[keys[i]])\n  }\n}\n\n/**\n * Create an watcher instance, returns the new watcher.\n *\n * @param {Object} owner\n * @param {String|Function} expressionOrFunction\n * @param {Function} callback\n * @param {Object} options\n *                 - {Boolean} deep\n *                 - {Boolean} sync\n *                 - {Boolean} lazy\n * @return {Watcher}\n */\n\nexport function watch (owner, expressionOrFunction, callback, options) {\n  // parse expression for getter\n  const getter = isFunction(expressionOrFunction)\n               ? expressionOrFunction\n               : parseExpression(expressionOrFunction)\n  return new Watcher(owner, getter, callback, options)\n}\n\n/**\n * Make a computed getter, which can collect dependencies.\n *\n * @param {Object} owner\n * @param {Function} getter\n */\n\nexport function makeComputed (owner, getter) {\n  const watcher = new Watcher(owner, getter, null, {\n    deep: ob.deep,\n    lazy: true,\n    sync: ob.sync,\n  })\n  return function computedGetter () {\n    if (watcher.options.lazy && Dep.target && !Dep.target.options.lazy) {\n      watcher.options.lazy = false\n      watcher.callback = function () {\n        const deps = watcher.deps\n        for (let i = 0, l = deps.length; i < l; i++) {\n          deps[i].notify()\n        }\n      }\n    }\n    if (watcher.dirty) {\n      watcher.evaluate()\n    }\n    if (Dep.target) {\n      watcher.depend()\n    }\n    return watcher.value\n  }\n}\n","import {\n  observe,\n  defineReactive,\n} from './observe'\nimport {\n  watch as watche,\n  makeComputed,\n} from './watcher'\nimport {\n  def,\n  defi,\n  noop,\n  isFunction,\n  every,\n} from './utils'\nimport {\n  WATCHERS_PROPERTY_NAME,\n  DATA_PROPTERTY_NAME,\n} from './constants'\n\n// Only could be react, compute or watch\nob.default = watch\nob.deep = ob.lazy = ob.sync = false\n\nObject.setPrototypeOf(ob, {react, compute, watch})\n\n/**\n * ob\n *\n * @public\n * @param {Object} target\n * @param {*} [expression]\n * @param {*} [fun]\n * @param {*} [options]\n * @return {Function} ob\n */\n\nexport default function ob (target, expression, fun, options) {\n  if (!target.hasOwnProperty(WATCHERS_PROPERTY_NAME)) {\n    init(target)\n  }\n  return ob.default(target, expression, fun, options)\n}\n\n/**\n * React options\n *\n * @public\n * @param {Object} options\n * @param {Object} [target]\n * @return {Function} ob\n */\n\nfunction react (options, target) {\n  if (target) {\n    if (!target.hasOwnProperty(WATCHERS_PROPERTY_NAME)) {\n      init(target)\n    }\n  } else {\n    target = {}\n    init(target)\n  }\n  options.methods && carryMethods(target, options.methods)\n  options.data && reactProperties(target, options.data)\n  options.computed && computeProperties(target, options.computed)\n  options.watchers && watchProperties(target, options.watchers)\n  return target\n}\n\n/**\n * Compute property\n *\n * @public\n * @param {Object} target\n * @param {String} name\n * @param {Function|Object} getterOrAccessor\n *        - Function getter\n *        - Object accessor\n *          - Function [get]  - getter\n *          - Function [set]  - setter\n * @param {Boolean} [cache]\n */\n\nfunction compute (target, name, getterOrAccessor, cache) {\n  if (!target.hasOwnProperty(WATCHERS_PROPERTY_NAME)) {\n    init(target)\n  }\n  let getter, setter\n  if (isFunction(getterOrAccessor)) {\n    getter = makeComputed(target, getterOrAccessor)\n    setter = noop\n  } else {\n    getter = getterOrAccessor.get\n            ? cache !== false\n              ? makeComputed(target, getterOrAccessor.get)\n              : getterOrAccessor.get.bind(this)\n            : noop\n    setter = getterOrAccessor.set ? getterOrAccessor.set.bind(this) : noop\n  }\n  defi(target, name, getter, setter)\n}\n\n/**\n * Watch property\n *\n * @public\n * @param {Object} target\n * @param {String|Function} expressionOrFunction\n * @param {Function} callback\n * @param {Object} [options]\n *                 - {Boolean} deep\n *                 - {Boolean} sync\n *                 - {Boolean} lazy\n * @return {Watcher}\n */\n\nfunction watch (target, expressionOrFunction, callback, options = ob) {\n  if (!target.hasOwnProperty(WATCHERS_PROPERTY_NAME)) {\n    init(target)\n  }\n  return watche(target, expressionOrFunction, callback, options)\n}\n\n/**\n * @private\n * @param {Object} target\n */\n\nfunction init (target) {\n  def(target, WATCHERS_PROPERTY_NAME, [], false)\n  def(target, DATA_PROPTERTY_NAME, Object.create(null), false)\n  observe(target[DATA_PROPTERTY_NAME])\n  reactSelfProperties(target)\n}\n\n/**\n * @private\n * @param {Object} target\n * @param {Object} methods\n */\n\nfunction carryMethods (target, methods) {\n  every(methods, (name, method) => {\n    target[name] = method.bind(target)\n  })\n}\n\n/**\n * @private\n * @param {Object} target\n * @param {String} key\n * @param {*} value\n */\nfunction reactProperty (target, key, value) {\n  target[DATA_PROPTERTY_NAME][key] = value\n  defineReactive(target[DATA_PROPTERTY_NAME], key, value)\n  proxy(target, key)\n}\n\n/**\n * @private\n * @param {Object} target\n * @param {Object} properties\n */\n\nfunction reactProperties (target, properties) {\n  every(properties, (key, value) => reactProperty(target, key, value))\n}\n\n/**\n * @private\n * @param {Object} target\n */\n\nfunction reactSelfProperties (target) {\n  every(target, (key, value) => {\n    !isFunction(value) && reactProperty(target, key, value)\n  })\n}\n\n/**\n * @private\n * @param {Object} target\n * @param {Object} properties\n */\n\nfunction computeProperties (target, properties) {\n  every(properties, (key, value) => compute(target, key, value))\n}\n\n/**\n * @private\n * @param {Object} target\n * @param {Object} properties\n */\n\nfunction watchProperties (target, properties) {\n  every(properties, (expression, functionOrOption) => {\n    if (isFunction(functionOrOption)) {\n      watch(target, expression, functionOrOption)\n    } else {\n      watch(target, expression, functionOrOption.watcher, functionOrOption)\n    }\n  })\n}\n\n/**\n * @private\n * @param {Object} target\n * @param {String} key\n */\n\nfunction proxy (target, key) {\n  function getter () {\n    return target[DATA_PROPTERTY_NAME][key]\n  }\n  function setter (value) {\n    target[DATA_PROPTERTY_NAME][key] = value\n  }\n  defi(target, key, getter, setter)\n}\n","var babelHelpers = {};\nexport var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nexport var jsx = function () {\n  var REACT_ELEMENT_TYPE = typeof Symbol === \"function\" && Symbol.for && Symbol.for(\"react.element\") || 0xeac7;\n  return function createRawReactElement(type, props, key, children) {\n    var defaultProps = type && type.defaultProps;\n    var childrenLength = arguments.length - 3;\n\n    if (!props && childrenLength !== 0) {\n      props = {};\n    }\n\n    if (props && defaultProps) {\n      for (var propName in defaultProps) {\n        if (props[propName] === void 0) {\n          props[propName] = defaultProps[propName];\n        }\n      }\n    } else if (!props) {\n      props = defaultProps || {};\n    }\n\n    if (childrenLength === 1) {\n      props.children = children;\n    } else if (childrenLength > 1) {\n      var childArray = Array(childrenLength);\n\n      for (var i = 0; i < childrenLength; i++) {\n        childArray[i] = arguments[i + 3];\n      }\n\n      props.children = childArray;\n    }\n\n    return {\n      $$typeof: REACT_ELEMENT_TYPE,\n      type: type,\n      key: key === undefined ? null : '' + key,\n      ref: null,\n      props: props,\n      _owner: null\n    };\n  };\n}();\n\nexport var asyncIterator = function (iterable) {\n  if (typeof Symbol === \"function\") {\n    if (Symbol.asyncIterator) {\n      var method = iterable[Symbol.asyncIterator];\n      if (method != null) return method.call(iterable);\n    }\n\n    if (Symbol.iterator) {\n      return iterable[Symbol.iterator]();\n    }\n  }\n\n  throw new TypeError(\"Object is not async iterable\");\n};\n\nexport var asyncGenerator = function () {\n  function AwaitValue(value) {\n    this.value = value;\n  }\n\n  function AsyncGenerator(gen) {\n    var front, back;\n\n    function send(key, arg) {\n      return new Promise(function (resolve, reject) {\n        var request = {\n          key: key,\n          arg: arg,\n          resolve: resolve,\n          reject: reject,\n          next: null\n        };\n\n        if (back) {\n          back = back.next = request;\n        } else {\n          front = back = request;\n          resume(key, arg);\n        }\n      });\n    }\n\n    function resume(key, arg) {\n      try {\n        var result = gen[key](arg);\n        var value = result.value;\n\n        if (value instanceof AwaitValue) {\n          Promise.resolve(value.value).then(function (arg) {\n            resume(\"next\", arg);\n          }, function (arg) {\n            resume(\"throw\", arg);\n          });\n        } else {\n          settle(result.done ? \"return\" : \"normal\", result.value);\n        }\n      } catch (err) {\n        settle(\"throw\", err);\n      }\n    }\n\n    function settle(type, value) {\n      switch (type) {\n        case \"return\":\n          front.resolve({\n            value: value,\n            done: true\n          });\n          break;\n\n        case \"throw\":\n          front.reject(value);\n          break;\n\n        default:\n          front.resolve({\n            value: value,\n            done: false\n          });\n          break;\n      }\n\n      front = front.next;\n\n      if (front) {\n        resume(front.key, front.arg);\n      } else {\n        back = null;\n      }\n    }\n\n    this._invoke = send;\n\n    if (typeof gen.return !== \"function\") {\n      this.return = undefined;\n    }\n  }\n\n  if (typeof Symbol === \"function\" && Symbol.asyncIterator) {\n    AsyncGenerator.prototype[Symbol.asyncIterator] = function () {\n      return this;\n    };\n  }\n\n  AsyncGenerator.prototype.next = function (arg) {\n    return this._invoke(\"next\", arg);\n  };\n\n  AsyncGenerator.prototype.throw = function (arg) {\n    return this._invoke(\"throw\", arg);\n  };\n\n  AsyncGenerator.prototype.return = function (arg) {\n    return this._invoke(\"return\", arg);\n  };\n\n  return {\n    wrap: function (fn) {\n      return function () {\n        return new AsyncGenerator(fn.apply(this, arguments));\n      };\n    },\n    await: function (value) {\n      return new AwaitValue(value);\n    }\n  };\n}();\n\nexport var asyncGeneratorDelegate = function (inner, awaitWrap) {\n  var iter = {},\n      waiting = false;\n\n  function pump(key, value) {\n    waiting = true;\n    value = new Promise(function (resolve) {\n      resolve(inner[key](value));\n    });\n    return {\n      done: false,\n      value: awaitWrap(value)\n    };\n  }\n\n  ;\n\n  if (typeof Symbol === \"function\" && Symbol.iterator) {\n    iter[Symbol.iterator] = function () {\n      return this;\n    };\n  }\n\n  iter.next = function (value) {\n    if (waiting) {\n      waiting = false;\n      return value;\n    }\n\n    return pump(\"next\", value);\n  };\n\n  if (typeof inner.throw === \"function\") {\n    iter.throw = function (value) {\n      if (waiting) {\n        waiting = false;\n        throw value;\n      }\n\n      return pump(\"throw\", value);\n    };\n  }\n\n  if (typeof inner.return === \"function\") {\n    iter.return = function (value) {\n      return pump(\"return\", value);\n    };\n  }\n\n  return iter;\n};\n\nexport var asyncToGenerator = function (fn) {\n  return function () {\n    var gen = fn.apply(this, arguments);\n    return new Promise(function (resolve, reject) {\n      function step(key, arg) {\n        try {\n          var info = gen[key](arg);\n          var value = info.value;\n        } catch (error) {\n          reject(error);\n          return;\n        }\n\n        if (info.done) {\n          resolve(value);\n        } else {\n          return Promise.resolve(value).then(function (value) {\n            step(\"next\", value);\n          }, function (err) {\n            step(\"throw\", err);\n          });\n        }\n      }\n\n      return step(\"next\");\n    });\n  };\n};\n\nexport var classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nexport var createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nexport var defineEnumerableProperties = function (obj, descs) {\n  for (var key in descs) {\n    var desc = descs[key];\n    desc.configurable = desc.enumerable = true;\n    if (\"value\" in desc) desc.writable = true;\n    Object.defineProperty(obj, key, desc);\n  }\n\n  return obj;\n};\n\nexport var defaults = function (obj, defaults) {\n  var keys = Object.getOwnPropertyNames(defaults);\n\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    var value = Object.getOwnPropertyDescriptor(defaults, key);\n\n    if (value && value.configurable && obj[key] === undefined) {\n      Object.defineProperty(obj, key, value);\n    }\n  }\n\n  return obj;\n};\n\nexport var defineProperty = function (obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n};\n\nexport var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nexport var get = function get(object, property, receiver) {\n  if (object === null) object = Function.prototype;\n  var desc = Object.getOwnPropertyDescriptor(object, property);\n\n  if (desc === undefined) {\n    var parent = Object.getPrototypeOf(object);\n\n    if (parent === null) {\n      return undefined;\n    } else {\n      return get(parent, property, receiver);\n    }\n  } else if (\"value\" in desc) {\n    return desc.value;\n  } else {\n    var getter = desc.get;\n\n    if (getter === undefined) {\n      return undefined;\n    }\n\n    return getter.call(receiver);\n  }\n};\n\nexport var inherits = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\nexport var _instanceof = function (left, right) {\n  if (right != null && typeof Symbol !== \"undefined\" && right[Symbol.hasInstance]) {\n    return right[Symbol.hasInstance](left);\n  } else {\n    return left instanceof right;\n  }\n};\n\nexport var interopRequireDefault = function (obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n};\n\nexport var interopRequireWildcard = function (obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n};\n\nexport var newArrowCheck = function (innerThis, boundThis) {\n  if (innerThis !== boundThis) {\n    throw new TypeError(\"Cannot instantiate an arrow function\");\n  }\n};\n\nexport var objectDestructuringEmpty = function (obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure undefined\");\n};\n\nexport var objectWithoutProperties = function (obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n};\n\nexport var possibleConstructorReturn = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\nexport var selfGlobal = typeof global === \"undefined\" ? self : global;\n\nexport var set = function set(object, property, value, receiver) {\n  var desc = Object.getOwnPropertyDescriptor(object, property);\n\n  if (desc === undefined) {\n    var parent = Object.getPrototypeOf(object);\n\n    if (parent !== null) {\n      set(parent, property, value, receiver);\n    }\n  } else if (\"value\" in desc && desc.writable) {\n    desc.value = value;\n  } else {\n    var setter = desc.set;\n\n    if (setter !== undefined) {\n      setter.call(receiver, value);\n    }\n  }\n\n  return value;\n};\n\nexport var slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\nexport var slicedToArrayLoose = function (arr, i) {\n  if (Array.isArray(arr)) {\n    return arr;\n  } else if (Symbol.iterator in Object(arr)) {\n    var _arr = [];\n\n    for (var _iterator = arr[Symbol.iterator](), _step; !(_step = _iterator.next()).done;) {\n      _arr.push(_step.value);\n\n      if (i && _arr.length === i) break;\n    }\n\n    return _arr;\n  } else {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n  }\n};\n\nexport var taggedTemplateLiteral = function (strings, raw) {\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n};\n\nexport var taggedTemplateLiteralLoose = function (strings, raw) {\n  strings.raw = raw;\n  return strings;\n};\n\nexport var temporalRef = function (val, name, undef) {\n  if (val === undef) {\n    throw new ReferenceError(name + \" is not defined - temporal dead zone\");\n  } else {\n    return val;\n  }\n};\n\nexport var temporalUndefined = {};\n\nexport var toArray = function (arr) {\n  return Array.isArray(arr) ? arr : Array.from(arr);\n};\n\nexport var toConsumableArray = function (arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n};\n\nbabelHelpers;\n\nexport { _typeof as typeof, _extends as extends, _instanceof as instanceof }","let uid = 0\n\n/**\n * A dep is an observable that can have multiple\n * watcher subscribing to it.\n *\n * @constructor\n */\n\nexport default class Dep {\n  // the current target watcher being evaluated.\n  // this is globally unique because there could be only one\n  // watcher being evaluated at any time.\n  static target = null\n\n  constructor () {\n    this.id = uid++\n    this.subs = []\n  }\n\n  /**\n   * Add a subscriber.\n   *\n   * @param {Watcher} sub\n   */\n\n  addSub (sub) {\n    this.subs.push(sub)\n  }\n\n  /**\n   * Remove a subscriber.\n   *\n   * @param {Watcher} sub\n   */\n\n  removeSub (sub) {\n    this.subs.$remove(sub)\n  }\n\n  /**\n   * Add self as a dependency to the target watcher.\n   */\n\n  depend () {\n    Dep.target.addDep(this)\n  }\n\n  /**\n   * Notify all subscribers of a new value.\n   */\n\n  notify () {\n    const subs = this.subs\n    for (let i = 0, l = subs.length; i < l; i++) {\n      subs[i].update()\n    }\n  }\n}\n","export const OB_NAME = '__ob__'\nexport const WATCHERS_PROPERTY_NAME = '__watchers__'\nexport const DATA_PROPTERTY_NAME = '__data__'\n\nexport const IS_DEBUG = typeof process !== 'undefined'\n                        && process.env.NODE_ENV !== 'production'\n"],"names":["def","object","property","value","enumerable","defineProperty","defi","getter","setter","isPlainObject","toString","call","OBJECT_STRING","isObject","isFunction","fun","every","callback","keys","Object","i","l","length","noop","amend","array","setPrototypeOf","arrayMethods","$set","index","this","Number","splice","$remove","item","indexOf","Observer","dep","Dep","OB_NAME","isArray","observeArray","walk","observe","observer","prototype","hasOwnProperty","isExtensible","defineReactive","key","reactiveGetter","currentValue","target","depend","childOb","e","reactiveSetter","newValue","oldValue","notify","desc","getOwnPropertyDescriptor","configurable","get","set","makeGetterFunction","body","Function","parse","expression","String","trim","resetBatcherState","flushBatcherQueue","queue","runBatcherQueue","queueIndex","watcher","id","run","batch","has","push","waiting","traverse","watch","owner","expressionOrFunction","options","parseExpression","Watcher","makeComputed","ob","deep","sync","lazy","deps","dirty","evaluate","WATCHERS_PROPERTY_NAME","default","react","methods","carryMethods","data","reactProperties","computed","computeProperties","watchers","watchProperties","compute","name","getterOrAccessor","cache","bind","watche","init","DATA_PROPTERTY_NAME","create","method","reactProperty","properties","reactSelfProperties","functionOrOption","proxy","_typeof","Symbol","iterator","obj","constructor","classCallCheck","AwaitValue","AsyncGenerator","gen","send","arg","Promise","resolve","reject","request","next","back","front","resume","result","then","settle","done","err","type","_invoke","return","undefined","asyncIterator","throw","wrap","fn","apply","arguments","await","instance","Constructor","TypeError","createClass","defineProperties","props","descriptor","writable","protoProps","staticProps","uid","subs","sub","addDep","update","IS_DEBUG","process","env","NODE_ENV","Array","warn","console","_Set","Set","match","add","clear","arrayPrototype","arrayMutativeMethods","original","args","inserted","slice","_this","convert","items","nextTick","nextTickHandler","callbackCopies","callbacks","pending","timerFunction","MutationObserver","counter","textNode","document","createTextNode","characterData","inBrowser","window","context","global","setImmediate","setTimeout","active","newDeps","depIds","newDepIds","beforeGet","scope","afterGet","addSub","removeSub","tmp","current"],"mappings":"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"}